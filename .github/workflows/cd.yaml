name: CD - Hybrid Deployment

on:
  workflow_run:
    workflows: [Setup Infra and Deploy GitHub Runner]
    types:
      - completed
  workflow_dispatch:   # one-click manual deploy

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      # Checkout infra repo (this one)
      - name: Checkout infra
        uses: actions/checkout@v4

      - name: Bootstrap Kubernetes prereqs
        run: |
          chmod +x install-kube.sh
          ./install-kube.sh

      # Checkout each microservice repo
      - name: Checkout Frontend
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/frontend
          token: ${{ secrets.GH_PAT }}
          ref: main
          path: frontend

      - name: Checkout Backend
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/backend
          token: ${{ secrets.GH_PAT }}
          ref: main
          path: backend

      - name: Checkout AI Service
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/ai
          token: ${{ secrets.GH_PAT }}
          ref: main
          path: ai

      # Collect all manifests into one folder
      - name: Collect manifests
        run: |
          mkdir all-k8s
          cp -r kubernetes/* all-k8s/ || true
          cp -r frontend/kubernetes/* all-k8s/ || true
          cp -r backend/kubernetes/* all-k8s/ || true
          cp -r ai/kubernetes/* all-k8s/ || true


      - name: Install Helm
        run: |
          sudo -u ubuntu curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          sudo -u ubuntu helm version

      # Install Prometheus + Grafana via Helm (Grafana as NodePort)
      - name: Install monitoring stack
        run: |
          sudo -u ubuntu helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          sudo -u ubuntu helm repo update
          sudo -u ubuntu helm upgrade --install monitoring prometheus-community/kube-prometheus-stack \
            --namespace monitoring --create-namespace \
            --set grafana.service.type=NodePort \
            --set grafana.service.nodePort=32000 \
            --set prometheus.service.type=NodePort \
            --set prometheus.service.nodePort=32001


      # (Optional) configure AWS/K8s secrets if needed
      - name: Configure AWS Secret
        run: |
          sudo -u ubuntu kubectl delete secret aws-credentials --ignore-not-found
          sudo -u ubuntu kubectl create secret generic aws-credentials \
            --from-literal=accessKey=${{ secrets.AWS_ACCESS_KEY_ID }} \
            --from-literal=secretKey=${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Apply all manifests at once
      - name: Apply Kubernetes manifests
        run: sudo -u ubuntu kubectl apply -R -f all-k8s/ --validate=false

        
      - name: Wait for resources to appear
        run: sleep 20

      # Verify rollouts service by service
      - name: Verify Backend rollout
        run: sudo -u ubuntu kubectl rollout status deployment/backend-deployment

      - name: Verify AI rollout
        run: sudo -u ubuntu kubectl rollout status deployment/ai-service

      - name: Verify Frontend rollout
        run: sudo -u ubuntu kubectl rollout status deployment/frontend-deployment
